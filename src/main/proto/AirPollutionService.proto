syntax = "proto3";

package com.chuntao;

import "google/protobuf/timestamp.proto";

option java_multiple_files = true;
option java_package = "com.chuntao.service";
option java_outer_classname = "AirPollutionService";

// Sensor Service: monitor air index and analyse data
service AirPollutionTrack {
  // Simple RPC for collecting sensor data
  rpc GetAllSensorData(SensorRequest) returns (SensorResponse) {}
  // Server-side streaming for requesting single detected item
  rpc GetSingleSensorData(SensorRequest) returns (stream SensorResponse) {}

  // Bidirectional streaming RPC for controlling ventilation based on sensor data
  rpc VentilationControl(stream SensorResponse) returns (stream VentilationResponse) {}

  // Client-side streaming RPC for receiving notifications
  rpc ReceiveNotifications(stream VentilationResponse) returns (NotificationMessage) {}
}

message SensorRequest {
  int32 sensor_id = 1;
}

message SensorResponse {
  string location = 1;
  float PM = 2; // PM2.5 density in Î¼g/m3 of the air
  float temperature = 3; // Air temperature in Celsius
  float VOC = 4; // VOC level in mg/m3
  float humidity = 5; // Humidity in Percentage
  float CO = 6; // CO in ppm
  int32 pollution_level = 7;
  google.protobuf.Timestamp timestamp = 8;
}

// Ventilation Service: automatically turn on ventilation based on air quality
message VentilationResponse {
  string location = 1;
  string pollution_item = 2;
  bool turn_on = 3;
  google.protobuf.Timestamp timestamp = 4;
}

// Notification Service:
message NotificationMessage {
  string location = 1;
  string air_quality = 2;
  string vent_control = 3;
}